x-common-variables: &common-variables
  DB_HOST: ${DB_HOST:-db}
  DB_PORT: ${DB_PORT:-}
  DB_USERNAME: ${DB_USERNAME:-}
  DB_PASSWORD: ${DB_PASSWORD:-}
  DB_NAME: ${DB_NAME:-}
  BACKEND_ADMIN_USERNAME: ${BACKEND_ADMIN_USERNAME:-}
  BACKEND_ADMIN_PASSWORD: ${BACKEND_ADMIN_PASSWORD:-}
  BACKEND_ADMIN_GUID: ${BACKEND_ADMIN_GUID:-}
  JWT_SECRET: ${JWT_SECRET:-}
  JWT_ISSUER: ${JWT_ISSUER:-}
  JWT_AUDIENCE: ${JWT_AUDIENCE:-}
  JWT_EXPIRATION_IN_MINUTES: ${JWT_EXPIRATION_IN_MINUTES:-}


services:
  certbot:
    image: certbot/certbot
    ports:
      - 80:80
    volumes:
      - certbot-var:/var/lib/letsencrypt
      - certbot-etc:/etc/letsencrypt
    entrypoint: >
      sh -c "while true; do
               certbot renew --standalone --preferred-challenges http;
               sleep 12h;
             done"
    profiles:
      - https

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    profiles:
      - https
      - http

  api-http:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      <<: *common-variables
      API_PROTOCOL: http
      ASPNETCORE_URLS: http://+:8888
    ports:
      - "8888:8888"
    depends_on:
      - db
    profiles:
      - http

  api-https:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      <<: *common-variables
      API_PROTOCOL: https
      ASPNETCORE_URLS: https://+:8888
    ports:
      - "8888:8888"
    depends_on:
      - db
      - certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
    profiles:
      - https
  

volumes:
  certbot-var:
  certbot-etc:
  postgres: